install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
bye()
install_from_swirl("Data Analysis")
install_from_swirl("Statistical Inference")
install.packages("Using R")
install.packages("UsingR")
library(UsingR)
?father.son
father.son
?data.frame
father.son(row.names(1))
father.son.names
father.son[1,]
?linreg
?reg
?lr
library(swirld)
library(swirl)
swirl()
range(cars$price)
61.9-7.4
var(cars)
var(cars)$price
var(cars$price)
sd(cars$price)
15
20
plo(child~parent, galton)
plot(child~parent, galton)
plot(jitter(child,4)~parent, galton)
regrline <- lm(child~parent,galton)
abline(regrline, lwd = 3, col = 'red')
summary(regrline)
bye()
exit()
quit()
father.sons
father.son
fathers.sons
library("UsingR")
movies
father.son
tallsons <- father.son$fheight[>71.0]
tallsons <- subset(father.son$fheight > 71.0)
tallsons <- subset(father.son, fheight > 71.0)
tallsons
tallsons <- subset(father.son, fheight == round(71))
tallsons
tallsons <- subset(father.son, round(fheight) == (71))
tallsons
mean(tallsons$fheight)
mean(tallsons$sheight)
tallfathers <- subset(father.son, round(fheight) == (71))
rm(tallsons)
galton
galton
galton[1,]
?galton
data(father.son)
father.son
?promise
quit()
install.packages("rafalib")
install.packages("Rtools")
install.packages("devtools")
library('devtools')
install.packages("Rtools")
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename <- basename(url)
download(url, destfile=filename)
x <- unlist( read.csv(filename) )
x
library("swirl")
swirl()
install.packages(c("BH", "boot", "class", "cluster", "crayon", "curl", "DBI", "devtools", "dplyr", "evaluate", "foreign", "ggplot2", "git2r", "gridExtra", "gtable", "HistData", "Hmisc", "httr", "installr", "jsonlite", "latticeExtra", "lazyeval", "MASS", "Matrix", "mgcv", "mime", "munsell", "nlme", "nnet", "openssl", "plyr", "Rcpp", "RCurl", "rstudioapi", "scales", "spatial", "stringi", "survival", "swirl", "testthat", "withr", "xml2"))
install.packages(c("boot", "class", "cluster", "foreign", "MASS", "Matrix", "mgcv", "nlme", "nnet", "spatial", "survival"))
quit()
libraries("swirl")
library("swirl")
rm(list=ls())
swirl()
quit()
install.packages(c("boot", "class", "cluster", "curl", "DBI", "digest", "foreign", "jsonlite", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "R6", "Rcpp", "rversions", "spatial", "stringr", "survival", "tibble"))
update.packages()
download.packages("Microsoft Open R")
download.packages("Microsoft Open R", destdir= "C:\Users\Christopher\AppData\Local\Temp\RtmpuAG1rb\downloaded_packages")
download.packages(pkg="Microsoft Open R", destdir= "C:\Users\Christopher\AppData\Local\Temp\RtmpuAG1rb\downloaded_packages")
update.packages()
quit()
install.packages("ggplot2")
update.packages()
install.packages('ggplot2', dependencies = TRUE)
library(ggplot2)
install.packages('RColorBrewer', dependencies = TRUE)
library(RColorBrewer)
update.packages(ask = False)
update.packages(ask = false)
update.packages(ask = FALSE)
library()
install.packages('swirl')
.libPaths()
.Library
remove.packages()
remove.packages('tools')
swirl()
library(swirl)
swirl()
swirl()
install_course('Getting and Cleaning Data')
install_course('Statistical Inference')
mean(cars$mpgCity)
# The goal of this file is to introduce you to the
# R programming language. Let's start with by unraveling a
# little mystery!
# 1. Run the code below to create the vector 'udacious'.
# You need to highlight all of the lines of the code and then
# run it. You should see "udacious" appear in the workspace.
# The goal of this file is to introduce you to the
# R programming language. Let's start with by unraveling a
# little mystery!
# 1. Run the code below to create the vector 'udacious'.
# You need to highlight all of the lines of the code and then
# run it. You should see "udacious" appear in the workspace.
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "YOUR_NAME")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
mtcars
mtcars.fields
mtcards.names
mtcards[1]
mtcars[1]
mtcars[,1]
names(mtcars)
mean(mtcars$mpg)
?trim
??trim
mean(1:10, trim=1)
mean(1:10)
mean(1:10, trim=.1)
mean(1:10, trim=.100)
mean(1:10, trim=3)
mean(c(1,2,-1))
mean(c(1,2,-1), trim=.1)
mean(c(1,2,-1), trim=.10)
mean(c(1,2,-1), trim=1)
mean(c(1,2,-1), trim=0.1)
mean(c(1,2,-1), trim=3)
mean(c(1,2,-1), trim=0.66)
```{r}
{r}
summary(mtcars)
summary(mtcars)
efficient <- mtcars[mtcars$mpg >= 23]
efficient <- mtcars[,mtcars$mpg >= 23]
efficient <- mtcars[:,mtcars$mpg >= 23]
efficient <- subset(mtcars, mpg >= 23)
dim(efficient)
dim(efficient)[1,1]
dim(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
efficient
length(efficient)
nrows(efficient)
row(efficient)
nrow(efficient)
mtcars[mtcars$qsec <= 16.90]
mtcars[mtcars$qsec <= 16.90,]
lightCars <- mtcars[mtcars$wt < 2.000,'qsec']
lightCars
)
lightCars <- mtcars[mtcars$wt < 2.000,]
nrow(lightCars)
lightCars
mtcars$year <- 1974
View(mtcars)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
mtcars$year <- c(1973, 1974)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
install.packages('knitr', dependencies = T)
library(knitr)
install.packages("knitr", dependencies = T)
install.packages('knitr', dependencies = T)
library(knitr)
install.packages("knitr", dependencies = T)
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
subset(mtcars, 'mpg' >= 30 | 'hp' < 60)
efficient <- subset(mtcars, 'mpg' >= 30 | 'hp' < 60)
efficient[,1]
index(mtcars)
names(x = mtcars)
efficient <- subset(mtcars, 'mpg' >= 30 | 'hp' < 60)
row.names(efficient)
efficient <- subset(mtcars, mpg >= 30 | hp < 60)
row.names(efficient)
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
library(ggplot2)
ggplot(data=diamonds, aes(x=price)) +
geom_histogram(binwidth=100) +
coord_cartesian(xlim=c(0,2750)) +
scale_x_continuous(breaks = seq(0,2750,500)) +
facet_wrap(~color)
ggsave("diamonds_center_hist.jpeg")
quit(save=T)
.libPaths()
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
.libPaths()
.libPaths(new = "C:/Program Files/R/R-3.2.2/library")
.libPaths()
?library
update.packages("R")
.libPaths()
.libPaths("C:/Program Files/R/R-3.2.2/library")
library("acepack", lib.loc="C:/Program Files/R/R-3.2.2/library")
library("chron", lib.loc="C:/Program Files/R/R-3.1.3/library")
remove.packages("chron", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("acepack", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("bitops", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("colorspace", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("crayon", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("curl", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("data.table", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("dichromat", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("devtools", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("digest", lib="C:/Program Files/R/R-3.1.3/library")
remove.packages("evaluate", lib="C:/Program Files/R/R-3.1.3/library")
library(dplyr, tidyr, ggplot2)
library(c(dplyr, tidyr, ggplot2))
?library
library(dplyr)
library(ggplot2)
library(tidyr)
'a' + 's'
c('a','s')
getwd()
setwd("C:/Users/Christopher/Desktop/Nanodegree/P4-EDA")
setwd("C:/Users/Christopher/Desktop/Nanodegree/P4-EDA")
billionaires <- read.csv("billionaires.csv",header = T)
billionaires <- read.csv("billionaires.xlsx",header = T)
View(billionaires)
View(billionaires)
billionaires <- read.csv("billionaires.csv",header = T)
extdebt = read.csv('External Debt.csv', header=T)
View(billionaires)
View(extdebt)
colnames(billionaires))
colnames(billionaires)
colnames(billionaires)[1] <- "countries"
colnames(extdebt)[1] <- "countries"
View(billionaires)
View(extdebt)
df <- merge(billionaires, extdebt, key="countries", all.x=T,
y = c("X2004", "X2005", "X2006", "X2007"))
df <- merge(billionaires, extdebt, by="countries", all.x=T,
y = c("X2004", "X2005", "X2006", "X2007"))
df <- merge(x=billionaires,
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by="countries",
all.x=T)
?select
billionaires$countries %in% extdebt$countries
df <- merge(x=billionaires[billionaires$countries %in% extdebt$countries],
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by="countries",
all.x=T)
billionaires[billionaires$countries %in% extdebt$countries]
billionaires[,billionaires$countries %in% extdebt$countries]
select(billionaires, billionaires$countries %in% extdebt$countries]
filter(billionaires, billionaires$countries %in% extdebt$countries]
filter(billionaires, billionaires$countries %in% extdebt$countries])
filter(billionaires, billionaires$countries %in% extdebt$countries)
df <- merge(x=filter(billionaires, billionaires$countries %in% extdebt$countries),
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by="countries",
all.x=T)
df <- merge(x=filter(billionaires, billionaires$countries %in% extdebt$countries),
y=filter(extdebt[,c("X2004", "X2005", "X2006", "X2007")],
extdebt$countries %in% billionaires$countries),
by="countries",
all.x=T)
names(billionaires)
names(extdebt)
type(names(extdebt))
factors(names(extdebt))
typeof(names(extdebt))
typeof(names(billionaires))
?merge
df <- merge(x=billionaires,
y=extdebt,
by=intersect(names(billionaires),names(extdebt)))
View(df)
df <- merge(x=filter(billionaires, billionaires$countries %in% extdebt$countries),
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by="countries",
all.x=all)
df <- merge(x=filter(billionaires, billionaires$countries %in% extdebt$countries),
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by=billionaires$countries,
all.x=all)
df <- merge(x=filter(billionaires, billionaires$countries %in% extdebt$countries),
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by.x=billionaires$countries,
all.x=all)
df <- merge(x=filter(billionaires, billionaires$countries %in% extdebt$countries),
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by.x=countries,
all.x=all)
df <- merge(x=filter(billionaires, billionaires$countries %in% extdebt$countries),
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by.x=names(billionaires)[1],
all.x=all)
df <- left_join(x=billionaires,
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by=countries)
colnames(billionaires)[1] <- "countries"
colnames(extdebt)[1] <- "countries"
df <- left_join(x=billionaires,
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by="countries")
billionaires$countries = as.factor(billionaires$countries)
View(billionaires)
extdebt$countries = as.factor(extdebt$countries)
df <- left_join(x=billionaires,
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by="countries")
ctries = names(billionaires[1])
ctries
df <- left_join(x=billionaires,
y=extdebt[,c("X2004", "X2005", "X2006", "X2007")],
by=ctries)
df <- left_join(x=billionaires,
y=extdebt[,c(ctries,"X2004", "X2005", "X2006", "X2007")],
by=ctries)
View(df)
df <- left_join(x=billionaires,
y=extdebt[,c("countries","X2004", "X2005", "X2006", "X2007")],
by="countries")
ggplot(data=df, aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = F)
ggplot(data=df, aes(x=X2007.x, y=X2007.y/sum(X2007.y))) +
geom_point(na.rm = F)
ggplot(data=df, aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = F) +
scale_x_continuous(seq(0, 5, .5))
ggplot(data=filter(df, X2007.x !=0), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = F) +
scale_x_continuous(seq(0, 5, .5))
ggplot(data=filter(df, X2007.x !=0), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T) +
scale_x_continuous(seq(0, 5, .5))
ggplot(data=filter(df, X2007.x !=0), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T) +
xlim(c(0,3)) +
scale_x_continuous(seq(0, 3, .5))
ggplot(data=filter(df, X2007.x !=0), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T) +
xlim(c(0,3))
ggplot(data=filter(df, X2007.x !=0), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T) +
xlim(c(0,1.5))
ggplot(data=filter(df, X2007.x !=0), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T) +
xlim(c(0,1.1))
df2007 <- filter(df, X2007.x !=0 & !is.na(X2007.y)
df2007 <- filter(df, X2007.x !=0 & !is.na(X2007.y))
df2007 <- filter(df, X2007.x !=0 & !is.na(X2007.y))
View(df2007)
summary(df2007)
cor.test(df2007$X2007.x, df2007$X2007.y)
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
legend("upper right")
?legend
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
legend(legend = "upper right")
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
legend(legend = "topright")
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
legend(legend = "topright", x="topright")
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
legend(legend = "topright", x="topright")
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
legend(legend = "legend", x="bottomright")
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
legend(legend = "legend", x="bottomright")
df2007 <- filter(df, X2007.x !=0 & !is.na(X2007.y))
cor.test(df2007$X2007.x, df2007$X2007.y)
ggsave("billionaires per million vs external national debt.jpeg")
df2006 <- filter(df, X2006.x !=0 & !is.na(X2006.y))
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
legend(legend = "legend", x="bottomright")
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "blue") +
xlim(c(0,1.1)))
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1)) +
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "blue") +
xlim(c(0,1.1))
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "red") +
xlim(c(0,1.1))
ggplot(data=filter(df, X2007.x !=0 & !is.na(X2007.y)), aes(x=X2007.x, y=X2007.y)) +
geom_point(na.rm = T, color= "blue") +
xlim(c(0,1.1))
ggplot() +
geom_point(data=df2006,
aes(x=X2007.x, y=X2007.y),
na.rm = T,
color= "red") +
geom_point(data=df2007,
aes(x=X2007.x, y=X2007.y),
na.rm = T,
color= "blue") +
xlim(c(0,1.1))
ggplot(data=df) +
geom_point(aes(x=filter(df, X2007.x !=0),
y=filter(df, !is.na(X2007.y))),
na.rm = T,
color= "red") +
geom_point(aes(x=filter(df, X2006.x !=0),
y=filter(df, !is.na(X2006.y))),
na.rm = T,
color= "blue") +
xlim(c(0,1.1))
ggplot(data=df) +
geom_point(aes(x=filter(df, X2007.x !=0)$X2007.x,
y=filter(df, !is.na(X2007.y)))$X2007.y,
na.rm = T,
color= "red") +
geom_point(aes(x=filter(df, X2006.x !=0)$X2006.x,
y=filter(df, !is.na(X2006.y)))$X2006.y,
na.rm = T,
color= "blue") +
xlim(c(0,1.1))
ggplot(data=df) +
geom_point(aes(x=filter(df, X2007.x !=0)$X2007.x,
y=filter(df, !is.na(X2007.y))$X2007.y),
na.rm = T,
color= "red") +
geom_point(aes(x=filter(df, X2006.x !=0)$X2006.x,
y=filter(df, !is.na(X2006.y))$X2006.y),
na.rm = T,
color= "blue") +
xlim(c(0,1.1))
ggplot(data=df) +
geom_point(aes(x=df[df$X2007.x != 0]$X2007.x,
y=df[df$X2007.y !is.na]$X2007.y),
na.rm = T,
color= "red") +
xlim(c(0,1.1))
